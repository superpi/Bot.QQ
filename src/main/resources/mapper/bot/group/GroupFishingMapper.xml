<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ninja.skyrocketing.fuyao.bot.mapper.group.GroupFishingMapper">
  <resultMap id="BaseResultMap" type="ninja.skyrocketing.fuyao.bot.pojo.group.GroupFishing">
    <constructor>
      <idArg column="group_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <idArg column="user_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="fish_1" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="fish_2" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="fish_3" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="fish_4" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="fish_5" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    group_id, user_id, fish_1, fish_2, fish_3, fish_4, fish_5
  </sql>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from group_fishing
    where group_id = #{groupId,jdbcType=BIGINT}
      and user_id = #{userId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    delete from group_fishing
    where group_id = #{groupId,jdbcType=BIGINT}
      and user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByGroupId" parameterType="java.lang.Long">
    delete from group_fishing
    where group_id = #{groupId,jdbcType=BIGINT}
</delete>
  <insert id="insert" parameterType="ninja.skyrocketing.fuyao.bot.pojo.group.GroupFishing">
    insert into group_fishing (group_id, user_id, fish_1, 
      fish_2, fish_3, fish_4, 
      fish_5)
    values (#{groupId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{fish1,jdbcType=VARCHAR}, 
      #{fish2,jdbcType=VARCHAR}, #{fish3,jdbcType=VARCHAR}, #{fish4,jdbcType=VARCHAR}, 
      #{fish5,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="ninja.skyrocketing.fuyao.bot.pojo.group.GroupFishing">
    insert into group_fishing
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="groupId != null">
        group_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="fish1 != null">
        fish_1,
      </if>
      <if test="fish2 != null">
        fish_2,
      </if>
      <if test="fish3 != null">
        fish_3,
      </if>
      <if test="fish4 != null">
        fish_4,
      </if>
      <if test="fish5 != null">
        fish_5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="groupId != null">
        #{groupId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="fish1 != null">
        #{fish1,jdbcType=VARCHAR},
      </if>
      <if test="fish2 != null">
        #{fish2,jdbcType=VARCHAR},
      </if>
      <if test="fish3 != null">
        #{fish3,jdbcType=VARCHAR},
      </if>
      <if test="fish4 != null">
        #{fish4,jdbcType=VARCHAR},
      </if>
      <if test="fish5 != null">
        #{fish5,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="ninja.skyrocketing.fuyao.bot.pojo.group.GroupFishing">
    update group_fishing
    <set>
      <if test="fish1 != null">
        fish_1 = #{fish1,jdbcType=VARCHAR},
      </if>
      <if test="fish2 != null">
        fish_2 = #{fish2,jdbcType=VARCHAR},
      </if>
      <if test="fish3 != null">
        fish_3 = #{fish3,jdbcType=VARCHAR},
      </if>
      <if test="fish4 != null">
        fish_4 = #{fish4,jdbcType=VARCHAR},
      </if>
      <if test="fish5 != null">
        fish_5 = #{fish5,jdbcType=VARCHAR},
      </if>
    </set>
    where group_id = #{groupId,jdbcType=BIGINT}
      and user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="ninja.skyrocketing.fuyao.bot.pojo.group.GroupFishing">
    update group_fishing
    set fish_1 = #{fish1,jdbcType=VARCHAR},
      fish_2 = #{fish2,jdbcType=VARCHAR},
      fish_3 = #{fish3,jdbcType=VARCHAR},
      fish_4 = #{fish4,jdbcType=VARCHAR},
      fish_5 = #{fish5,jdbcType=VARCHAR}
    where group_id = #{groupId,jdbcType=BIGINT}
      and user_id = #{userId,jdbcType=BIGINT}
  </update>
</mapper>